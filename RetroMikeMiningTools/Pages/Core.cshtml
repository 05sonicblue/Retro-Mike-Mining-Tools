@page
@model CoreModel
@{
    ViewData["Title"] = "Core Settings";
	ViewData["CardTitle"] = "Configuration";
}
@using Kendo.Mvc.UI
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@Html.AntiForgeryToken()
@inject IHostApplicationLifetime AppLifetime
<form method="post">
    <div class="k-card">
        <div class="k-card-body">
            @if (!Model.IsMultiUser)
            {
                <div class="form-group">
                    <label>Platform: </label>
                    <input asp-for=Platform class="form-control" readonly="true" />
                </div>
                <div class="form-group">
                    <label>Port: </label>  
                    <input asp-for=Settings.Port class="form-control" readonly="@Model.PortReadOnly" />
                </div>
                <div class="form-group" visible="false" id="dockerHostContainer">
                    <label>Docker Host IP: </label>  
                    <input asp-for=Settings.DockerHostIp class="form-control" />
                </div>
                <div class="form-group" visible="true">
                    <label>Release Type: </label>  
                @(Html.Kendo().DropDownListFor(m => m.Settings.ReleaseType)
                    .DataTextField("Text")
                    .DataValueField("Value")
                    .BindTo(Html.GetEnumSelectList<Enums.ReleaseType>())
                        .Value(Convert.ToInt32(Model.Settings.ReleaseType).ToString())
                )
                </div>
            }
            <div class="form-group">
                <label>Default Power Price</label>  
                <input asp-for=Settings.DefaultPowerPrice class="form-control" />
            </div>
            <div class="form-group">
                <label>Hive OS API Key</label>  
                <input asp-for=Settings.HiveApiKey class="form-control" />
            </div>
            <div class="form-group">
                <label>Hive OS Farm ID</label>
                <input asp-for=Settings.HiveFarmID class="form-control" />
            </div>
            <div class="form-group">
                <label>Profitability Difference Threshold</label>
                <input asp-for=Settings.CoinDifferenceThreshold class="form-control" />
            </div>
            <div class="form-group">
                <label>CoinMarketCap API Key</label>
                <input asp-for=Settings.CoinMarketCapApi class="form-control" />
            </div>
            <div class="form-check">
                <input type="checkbox" class="form-check-input" asp-for=Settings.UiRigPriceCalculation>
                <label>Show Estimated Profit on Rig Grid?</label>
            </div>
            <div class="form-check">
                <input type="checkbox" class="form-check-input" asp-for=Settings.UiCoinPriceCalculation>
                <label>Show Estimated Profit on Rig Coins Grid?</label>
            </div>
            @if (!Model.IsMultiUser)
            {
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" asp-for=Settings.ProfitSwitchingEnabled>
                    <label>Enable Profit Switching?</label>
                </div>
                <div id="profitSwitchingContainer">
                    <hr />
                    <div class="form-group">
                        <label>Profit Switching Cron Schedule</label>
                        <input asp-for=Settings.ProfitSwitchingCronSchedule class="form-control" />
                        <div id="profitSwitchingCronUpcomingContainer"></div>
                    </div>
                    <hr />
                </div>
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" asp-for=Settings.AutoExchangingEnabled>
                    <label>Enable Auto Exchanging?</label>
                </div>
                <div id="autoExchangingContainer">
                    <hr />
                <div class="form-group">
                    <label>Auto Exchanging Cron Schedule</label>
                    <input asp-for=Settings.AutoExchangingCronSchedule class="form-control" />
                    <div id="autoExchangingCronUpcomingContainer"></div>
                </div>
                <hr />
            </div>
            }
        </div>
        <div class="k-card-footer">
        <input type="submit" value="Save" class="btn btn-primary" asp-page-handler="Submit" />
        &nbsp;
        @if (!Model.IsMultiUser)
        {
            <input type="button" value="Restart Services" class="btn btn-primary" onclick="Restart()"/>
            <button type="submit" asp-page-handler="DownloadBackupFile"class="btn btn-primary">Download Backup</button>
        }
        </div>
    </div>
</form>
<script>
    @{
    var message = ViewData["SettingsSaveMessage"];
}
@{
    var newUrl = ViewData["NewUrl"];
}
    function Restart(){
        $.ajax({
                url: "/Core?handler=Restart",
                type: 'POST',
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {   
                    $("#notification").data("kendoNotification").show("All Retro Mike Tech Tools Restarted", "success");
                    location.reload();
                },
            });
    }
    $(document).ready(function() {
        new MaskedPassword(document.getElementById("Settings_HiveApiKey"), '\u25CF');
        var message = '@message';
        var newUrl = '@newUrl';
        var isDocker = '@Model.PortReadOnly';
        if(message){
            $("#notification").data("kendoNotification").show(message, "success");
        }
        if(newUrl){
            $(location).prop('href', newUrl);
        }
        if(isDocker==='false'){
            $("#dockerHostContainer").hide();
        }
        $.ajax({
            url: "/Core?handler=HiveKey",
            type: 'POST',
            data: null,
            headers: {
                RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
            },
            success: function (response) {   
                if(response){
                    $('#Settings_HiveApiKey').val(response);
                    $('#Settings_HiveApiKey').focus();
                    $('#Settings_HiveApiKey').trigger({type: 'keypress', keyCode: 35});
                    $('#Settings_HiveFarmID').focus();
                }
            },
        });         

        if($("#Settings_ProfitSwitchingEnabled").is(':checked')){
            var cronExpression = $("#Settings_ProfitSwitchingCronSchedule").val();
            $.ajax({
                url: "/Core?handler=CronCalculator",
                type: 'POST',
                data: {cronExpression: cronExpression},
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {   
                    if(response){
                        var htmlCron = '<br /><p>Next 5 Runs</p><ul>';
                        if(response.length==0){
                            var htmlCron = '<br /><p style="color:red;">Invalid Cron Expression. You can generate one <a href="http://www.cronmaker.com/" target="_blank"><b>here</b></a></p>';
                        }else{
                            jQuery.each(response, function(index, value){
                                console.log(value);
                                htmlCron = htmlCron + "<li>" + value + '</li>';
                            });
                            htmlCron = htmlCron + '</ul>';
                        }
                        $('#profitSwitchingCronUpcomingContainer').html(htmlCron);
                    }
                },
            });
            $("#profitSwitchingContainer").show();
        }else{
            $("#profitSwitchingContainer").hide();
        }

        if($("#Settings_AutoExchangingEnabled").is(':checked')){
            var cronExpression = $("#Settings_AutoExchangingCronSchedule").val();
            $.ajax({
                url: "/Core?handler=CronCalculator",
                type: 'POST',
                data: {cronExpression: cronExpression},
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {   
                    if(response){
                        var htmlCron = '<br /><p>Next 5 Runs</p><ul>';
                        if(response.length==0){
                            var htmlCron = '<br /><p style="color:red;">Invalid Cron Expression. You can generate one <a href="http://www.cronmaker.com/" target="_blank"><b>here</b></a></p>';
                        }else{
                            jQuery.each(response, function(index, value){
                                console.log(value);
                                htmlCron = htmlCron + "<li>" + value + '</li>';
                            });
                            htmlCron = htmlCron + '</ul>';
                        }
                        $('#autoExchangingCronUpcomingContainer').html(htmlCron);
                    }
                },
            });
            $("#autoExchangingContainer").show();
        }else{
            $("#autoExchangingContainer").hide();
        }
    });

    $('#Settings_ProfitSwitchingEnabled').change(function() {
        if(this.checked){
            $("#profitSwitchingContainer").show();
        }else{
            $("#profitSwitchingContainer").hide();
        }        
    });

    $("#Settings_ProfitSwitchingCronSchedule").on("change keyup paste", function(){
        $.ajax({
            url: "/Core?handler=CronCalculator",
            type: 'POST',
            data: {cronExpression: this.value},
            headers: {
                RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
            },
            success: function (response) {   
                if(response){
                    var htmlCron = '<br /><p>Next 5 Runs</p><ul>';
                    if(response.length==0){
                        var htmlCron = '<br /><p style="color:red;">Invalid Cron Expression. You can generate one <a href="http://www.cronmaker.com/" target="_blank"><b>here</b></a></p>';
                    }else{
                        jQuery.each(response, function(index, value){
                            console.log(value);
                            htmlCron = htmlCron + "<li>" + value + '</li>';
                        });
                        htmlCron = htmlCron + '</ul>';
                    }
                    $('#profitSwitchingCronUpcomingContainer').html(htmlCron);
                }
            },
        });
    })

    $('#Settings_AutoExchangingEnabled').change(function() {
        if(this.checked){
            $("#autoExchangingContainer").show();
        }else{
            $("#autoExchangingContainer").hide();
        }        
    });

    

    $("#Settings_AutoExchangingCronSchedule").on("change keyup paste", function(){
        $.ajax({
            url: "/Core?handler=CronCalculator",
            type: 'POST',
            data: {cronExpression: this.value},
            headers: {
                RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
            },
            success: function (response) {   
                if(response){
                    var htmlCron = '<br /><p>Next 5 Runs</p><ul>';
                    if(response.length==0){
                        var htmlCron = '<br /><p style="color:red;">Invalid Cron Expression. You can generate one <a href="http://www.cronmaker.com/" target="_blank"><b>here</b></a></p>';
                    }else{
                        jQuery.each(response, function(index, value){
                            console.log(value);
                            htmlCron = htmlCron + "<li>" + value + '</li>';
                        });
                        htmlCron = htmlCron + '</ul>';
                    }
                    $('#autoExchangingCronUpcomingContainer').html(htmlCron);
                }
            },
        });
    })
</script>