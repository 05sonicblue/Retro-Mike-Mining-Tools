@page
@model IndexModel
@{
    ViewData["Title"] = "Dashboard";
	ViewData["CardTitle"] = "";
}
@using Kendo.Mvc.UI
@using RetroMikeMiningTools.DTO
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@Html.AntiForgeryToken()
<style>
  #logGrid > table
  {
      table-layout: fixed;
  }
</style>

<div class="container-fluid">
    @*<div class="row">
        <div class="col-md-6">
            <div class="card card-primary">
                <div class="card-header">
                    <h3 class="card-title">
                        Core System Settings
                    </h3>
                </div>

                <div class="card-body">
                    <label>
                        Control 1
                    </label>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card card-primary">
                <div class="card-header">
                    <h3 class="card-title">
                        Core System Settings
                    </h3>
                </div>

                <div class="card-body">
                    <label>
                        Control 2
                    </label>
                </div>
            </div>
        </div>
    </div>*@
    @(Html.Kendo().Dialog()
        .Name("updateDialog")
        .Title("Application Update")
        .Content("<p>Would you like to confirm updating the data?<p>")
        //.Width(400)
        .Modal(false)
        .Visible(false)
        .Actions(actions =>
        {
            actions.Add().Text("Ignore This Version");
            actions.Add().Text("Remind Me Later");
            actions.Add().Text("Install Update").Primary(true).Action("onSendData");
        })
    )
    <div class="row">
        <div>
            <div class="card card-primary">
                <div class="k-card-header">
                    <h3 class="k-card-title">
                        Log
                    </h3>
                </div>

                <div class="k-card-body">
                    <label>
                        @(Html.Kendo().Grid<LogEntry>
                            ().Name("logGrid")
                            .Sortable()
                            .Filterable()
                            .Columns(columns =>
                            {
                                columns.Bound(column => column.LogDateTime).Width(200).Format("{0:g}");
                                columns.Bound(column => column.LogType).Width(150);
                                columns.Bound(column => column.LogMessage);
                                columns.Command(column =>
                                {
                                    column.Destroy();
                                }).Width(125);
                            })
                            .DataSource(ds => ds.Ajax()
                            .Filter(x=> x.Add(y => y.LogType).IsNotEqualTo(Enums.LogType.System))
                            .Read(r => r.Url("/Index?handler=Read").Data("forgeryToken"))
                            .Destroy(d => d.Url("/Index?handler=Destroy").Data("forgeryToken"))
                            .Model(m => m.Id(id => id.Id))
                            .Sort(x => x.Add("LogDateTime").Descending())
                            )
                        )
                    </label>
                </div>
            </div>
        </div>
    </div>
</div>



<script>
    var refreshInterval = 1500;

    $(document).ready(function() {
        //$("#updateDialog").data("kendoDialog").content("test");
        //$("#updateDialog").data("kendoDialog").open();
    });

    function onSendData(){

    }
    function forgeryToken() {
        return kendo.antiForgeryTokens();
    }

    function RefreshLogGrid(){
        setInterval(function(){
            $.ajax({
                    url: "/Index?handler=RefreshLogs",
                    type: 'POST',
                    headers: {
                        RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {    
                        if(response=="New Data"){
                            var grid = $("#logGrid").data("kendoGrid");
                            grid.dataSource.read();
                        }
                    },
                    failure: function (response) {

                    },
                    error: function (response) {

                    }
                });
        }, refreshInterval);
    }
    RefreshLogGrid();
</script>